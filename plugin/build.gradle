/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.1/userguide/custom_plugins.html
 */

plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    id 'java-gradle-plugin'
    id 'maven-publish'
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.5.31'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    google()
}

dependencies {
    // Align versions of all Kotlin components
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    // Use the Kotlin JDK 8 standard library.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'

    implementation 'com.android.tools.build:gradle:7.1.2'

    implementation("com.squareup.okio:okio:3.0.0")

}

gradlePlugin {
    // Define the plugin
    plugins {
        greeting {
            id = 'top.lastcoffee.apkCopy'
            implementationClass = 'top.lastcoffee.apkCopy.ApkCopyPluginPlugin'
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)

tasks.named('check') {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}


java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        // 这里的 hello 可以任意命名
        hello(MavenPublication) {
            // 插件的组ID，建议设置为插件的包名
            groupId = 'com.lc.lastcoffee'
            // 翻译过来是 工件ID，我的理解是插件的名字
            artifactId = 'apkCopy'
            version = '0.0.25'
            // 组件类型，我们的插件其实就是Java组件
            from components.java
            pom {
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            // $rootDir 表示你项目的根目录
            url = "https://packages.aliyun.com/maven/repository/2172868-release-IdpJTx/"
            credentials {
                username = "61cd499ed6190210d8a7ac6a"
                password = "nAFRqD8F43h4"
            }
        }
    }
}
